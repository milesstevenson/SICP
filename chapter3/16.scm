#lang racket
(define (count-pairs x)
  (if (not (pair? x))
      0
      (+ (count-pairs (car x))
         (count-pairs (cdr x))
         1)))
;(cons (cons 1 2) (cons 3 4))
;
; returns 3
;
; +---+---+                  +---+---+    +---+
; |   |   |------------------|   |   |----| 4 |
; +---+---+                  +---+---+    +---+
;  |                           | 
;  |                           |  
; +---+---+    +---+         +---+ 
; |   |   |----| 2 |         | 3 |  
; +---+---+    +---+         +---+      
;   |     
;   |    
; +---+     
; | 1 |    
; +---+       


;(list (cons 1 2) (cons 3 4))
;
; returns 4
;
; +---+---+                +---+---+ 
; |   |   |----------------|   | / |
; +---+---+                +---+---+   
;  |                         |        
;  |                         |            
; +---+---+    +---+       +---+---+    +---+
; |   |   |----| 2 |       |   |   |----| 4 |
; +---+---+    +---+       +---+---+    +---+
;   |                        |
;   |                        |
; +---+                    +---+
; | 1 |                    | 3 |
; +---+                    +---+


;(list (list (list 1 2) 3) 4 5)
;
; returns 7
;
; +---+---+    +---+---+    +---+---+
; |   |   |----|   |   |----|   | / |
; +---+---+    +---+---+    +---+---+
;  |             |            |
;  |           +---+        +---+
;  |           | 4 |        | 5 |
;  |           +---+        +---+
;  |
; +---+---+    +---+---+ 
; |   |   |----|   | / |
; +---+---+    +---+---+    
;   |            |
;   |          +---+
;   |          | 3 |
;   |          +---+
;   |
; +---+---+    +---+---+ 
; |   |   |----|   | / |
; +---+---+    +---+---+ 
;   |            |
; +---+        +---+
; | 1 |        | 2 |
; +---+        +---+